{"version":3,"sources":["Modal/Modal.module.css","GalleryItem/GalleryItem.module.css","CloseBtn/CloseBtn.module.css","Gallery/Gallery.module.css","Button/Button.module.css","AppBar/AppBar.module.css","services/imgApi.js","CloseBtn/CloseBtn.jsx","Modal/Modal.jsx","GalleryItem/GalleryItem.jsx","Gallery/Gallery.jsx","Button/Button.jsx","AppBar/AppBar.jsx","App.js","index.js"],"names":["module","exports","queryKey","page","a","axios","params","q","data","hits","Error","defaults","baseURL","key","imgType","orientation","per_page","fetchImg","CloseBtn","onClick","type","className","st","btn","modalRoot","document","querySelector","Modal","src","alt","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","event","code","createPortal","Overlay","currentTarget","target","modal","image","GalleryItem","largeImageURL","id","useState","showModal","setShowModal","toggleModal","item","Gallery","images","list","map","webformatURL","tags","Button","AppBar","onSubmit","setQueryKey","header","preventDefault","trim","toast","warn","form","input","autoComplete","placeholder","value","onChange","toLowerCase","button","Status","App","status","setStatus","error","setError","setPage","setImages","then","catch","finally","scroll","scrollToBottom","newQueryKey","position","autoClose","length","imageId","filteredImages","filter","prevState","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8282ebaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3lWaK\",\"modal\":\"Modal_modal__35M9s\",\"image\":\"Modal_image__1dPj2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"GalleryItem_item__1yWcK\",\"image\":\"GalleryItem_image__39NIX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"CloseBtn_btn__3dNow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Gallery_list__14g5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1k_nH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__yPu5j\",\"form\":\"AppBar_form__2lmz-\",\"input\":\"AppBar_input__1INP-\",\"button\":\"AppBar_button__3rYBR\"};","import axios from 'axios';\r\n\r\nconst key = '19823143-e5d054b038f568b2343c680be';\r\nconst imgType = 'photo';\r\nconst orientation = 'horizontal';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\naxios.defaults.params = {\r\n  key,\r\n  imgType,\r\n  orientation,\r\n  per_page: 12,\r\n};\r\n\r\nasync function fetchImg(queryKey, page) {\r\n  try {\r\n    const { data } = await axios({\r\n      params: { q: queryKey, page },\r\n    });\r\n    return data.hits;\r\n  } catch (error) {\r\n    new Error('No respose from server');\r\n  }\r\n}\r\n\r\nexport default fetchImg;\r\n","import st from './CloseBtn.module.css';\r\n\r\nconst CloseBtn = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className={st.btn}>\r\n      x\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CloseBtn;\r\n","import { createPortal } from 'react-dom';\r\nimport { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport st from './Modal.module.css';\r\nimport CloseBtn from '../CloseBtn';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ src, alt, onClose }) => {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={st.Overlay} onClick={handleBackdropClick}>\r\n      <div className={st.modal}>\r\n        <CloseBtn onClick={onClose} />\r\n        <img src={src} alt={alt} className={st.image} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  src: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default Modal;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../Modal';\r\nimport st from './GalleryItem.module.css';\r\nimport CloseBtn from '../CloseBtn';\r\n\r\nconst GalleryItem = ({ src, alt, largeImageURL, id, onClick }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleDeleteImage = () => onClick(id);\r\n  return (\r\n    <li className={st.item}>\r\n      <CloseBtn onClick={handleDeleteImage} />\r\n      <img className={st.image} src={src} alt={alt} onClick={toggleModal} />\r\n      {showModal && (\r\n        <>\r\n          <Modal onClose={toggleModal} src={largeImageURL} alt={alt} />\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nGalleryItem.propTypes = {\r\n  src: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n\r\nexport default GalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport GalleryItem from '../GalleryItem';\r\nimport st from './Gallery.module.css';\r\n// import CloseBtn from '../CloseBtn';\r\n\r\nconst Gallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className={st.list}>\r\n      {images.map(({ webformatURL, tags, largeImageURL, id }) => (\r\n        <GalleryItem\r\n          id={id}\r\n          onClick={onClick}\r\n          key={id}\r\n          src={webformatURL}\r\n          alt={tags}\r\n          largeImageURL={largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nGallery.propTypes = {\r\n  imgList: PropTypes.array,\r\n};\r\n\r\nexport default Gallery;\r\n","import PropTypes from 'prop-types';\r\nimport st from './Button.module.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  const handleScroll = () => {\r\n    onClick();\r\n  };\r\n  return (\r\n    <button className={st.btn} type=\"button\" onClick={handleScroll}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport st from './AppBar.module.css';\r\n\r\nconst AppBar = ({ onSubmit }) => {\r\n  const [queryKey, setQueryKey] = useState('');\r\n\r\n  const handleChangeRequest = event => {\r\n    setQueryKey(event.currentTarget.value.toLowerCase());\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (queryKey.trim() === '') {\r\n      return toast.warn('Please enter your query');\r\n    }\r\n    onSubmit(queryKey);\r\n    setQueryKey('');\r\n  };\r\n  return (\r\n    <header className={st.header}>\r\n      <form onSubmit={handleSubmit} className={st.form}>\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Search images and photo\"\r\n          value={queryKey}\r\n          onChange={handleChangeRequest}\r\n        />\r\n        <button type=\"submit\" className={st.button}>\r\n          Search\r\n        </button>\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nAppBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AppBar;\r\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport fetchImg from './services/imgApi';\nimport { animateScroll as scroll } from 'react-scroll';\n\nimport Gallery from './Gallery';\nimport Button from './Button';\nimport AppBar from './AppBar';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst App = () => {\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  const [queryKey, setQueryKey] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n\n  const handleDelete = imageId => {\n    const filteredImages = images.filter(({ id }) => id !== imageId);\n    setImages(filteredImages);\n  };\n\n  const handleFormSubmit = newQueryKey => {\n    if (newQueryKey === queryKey) {\n      return;\n    }\n    setQueryKey(newQueryKey);\n    setPage(1);\n    setImages([]);\n  };\n\n  useEffect(() => {\n    if (!queryKey) {\n      return;\n    }\n\n    const renderimages = () => {\n      setStatus(Status.PENDING);\n      fetchImg(queryKey, page)\n        .then(images => setImages(images))\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        })\n        .finally(() => setStatus(Status.RESOLVED));\n    };\n    renderimages();\n    scroll.scrollToBottom();\n  }, [queryKey, page, error]);\n\n  const handleLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n  return (\n    <div className=\"container\">\n      <AppBar onSubmit={handleFormSubmit} />\n      <ToastContainer position=\"top-center\" autoClose={3000} />\n      {status === Status.REJECTED && toast.warn('Error')}\n      {images.length > 0 && <Gallery images={images} onClick={handleDelete} />}\n      {status === Status.RESOLVED && <Button onClick={handleLoadMore} />}\n      {status === Status.PENDING && (\n        <Loader type=\"ThreeDots\" color=\"blue\" height={80} width={80} />\n      )}\n    </div>\n  );\n};\n\nApp.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n  images: PropTypes.array,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}