{"version":3,"sources":["GalleryItem/GalleryItem.module.css","Gallery/Gallery.module.css","Modal/Modal.module.css","AppBar/AppBar.module.css","services/imgApi.js","Button/Button.jsx","Modal/Modal.jsx","GalleryItem/GalleryItem.jsx","Gallery/Gallery.jsx","AppBar/AppBar.jsx","App.js","index.js"],"names":["module","exports","queryKey","page","a","axios","params","q","data","hits","Error","defaults","baseURL","key","imgType","orientation","per_page","fetchImg","Button","onClick","value","className","type","modalRoot","document","querySelector","Modal","src","alt","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","event","code","createPortal","st","Overlay","currentTarget","target","modal","btn","image","GalleryItem","largeImageURL","id","useState","showModal","setShowModal","hover","setHover","toggleModal","item","console","log","onDoubleClick","Gallery","images","list","map","webformatURL","tags","AppBar","onSubmit","setQueryKey","header","preventDefault","toast","warn","form","input","autoComplete","placeholder","onChange","toLowerCase","button","Status","App","status","setStatus","error","setError","setPage","setImages","then","prevState","catch","finally","scroll","scrollToBottom","newQueryKey","position","autoClose","length","imageId","filteredImages","filter","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f21c988a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"GalleryItem_item__1yWcK\",\"image\":\"GalleryItem_image__39NIX\",\"btn\":\"GalleryItem_btn__2B-YS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Gallery_list__14g5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3lWaK\",\"modal\":\"Modal_modal__35M9s\",\"image\":\"Modal_image__1dPj2\",\"btn\":\"Modal_btn__1hQRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__yPu5j\",\"form\":\"AppBar_form__2lmz-\",\"input\":\"AppBar_input__1INP-\",\"button\":\"AppBar_button__3rYBR\"};","import axios from 'axios';\r\n\r\nconst key = '19823143-e5d054b038f568b2343c680be';\r\nconst imgType = 'photo';\r\nconst orientation = 'horizontal';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\naxios.defaults.params = {\r\n  key,\r\n  imgType,\r\n  orientation,\r\n  per_page: 12,\r\n};\r\n\r\nasync function fetchImg(queryKey, page) {\r\n  try {\r\n    const { data } = await axios({\r\n      params: { q: queryKey, page },\r\n    });\r\n    return data.hits;\r\n  } catch (error) {\r\n    new Error('No respose from server');\r\n  }\r\n}\r\n\r\nexport default fetchImg;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Button({ onClick, value, className, type }) {\r\n  return (\r\n    <button className={className} type={type} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import { createPortal } from 'react-dom';\r\nimport { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport st from './Modal.module.css';\r\nimport Button from '../Button';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ src, alt, onClose }) => {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={st.Overlay} onClick={handleBackdropClick}>\r\n      <div className={st.modal}>\r\n        <Button onClick={onClose} className={st.btn} type=\"button\" value=\"X\" />\r\n        <img src={src} alt={alt} className={st.image} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  src: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default Modal;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../Modal';\r\nimport st from './GalleryItem.module.css';\r\nimport Button from '../Button';\r\n\r\nconst GalleryItem = ({ src, alt, largeImageURL, id, onClick }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const handleHover = () => {\r\n    setHover(!hover);\r\n    console.log(hover);\r\n  };\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleDeleteImage = () => onClick(id);\r\n  return (\r\n    <li className={st.item} onClick={handleHover}>\r\n      {hover && (\r\n        <Button\r\n          onClick={handleDeleteImage}\r\n          className={st.btn}\r\n          type=\"button\"\r\n          value=\"X\"\r\n        />\r\n      )}\r\n      <img\r\n        className={st.image}\r\n        src={src}\r\n        alt={alt}\r\n        onDoubleClick={toggleModal}\r\n      />\r\n      {showModal && (\r\n        <>\r\n          <Modal onClose={toggleModal} src={largeImageURL} alt={alt} />\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nGalleryItem.propTypes = {\r\n  src: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n\r\nexport default GalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport GalleryItem from '../GalleryItem';\r\nimport st from './Gallery.module.css';\r\n\r\nconst Gallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className={st.list}>\r\n      {images.map(({ webformatURL, tags, largeImageURL, id }) => (\r\n        <GalleryItem\r\n          id={id}\r\n          onClick={onClick}\r\n          key={id}\r\n          src={webformatURL}\r\n          alt={tags}\r\n          largeImageURL={largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nGallery.propTypes = {\r\n  imgList: PropTypes.array,\r\n};\r\n\r\nexport default Gallery;\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport st from './AppBar.module.css';\r\nimport Button from '../Button';\r\n\r\nconst AppBar = ({ onSubmit }) => {\r\n  const [queryKey, setQueryKey] = useState('');\r\n\r\n  const handleChangeRequest = event => {\r\n    setQueryKey(event.currentTarget.value.toLowerCase());\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (queryKey === '') {\r\n      return toast.warn('Please enter your query');\r\n    }\r\n    onSubmit(queryKey);\r\n    setQueryKey('');\r\n  };\r\n  return (\r\n    <header className={st.header}>\r\n      <form onSubmit={handleSubmit} className={st.form}>\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Search images and photo\"\r\n          value={queryKey}\r\n          onChange={handleChangeRequest}\r\n        />\r\n        <Button type=\"submit\" className={st.button} value=\"Search\" />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nAppBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AppBar;\r\n","import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Loader from 'react-loader-spinner';\r\nimport fetchImg from './services/imgApi';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Gallery from './Gallery';\r\nimport Button from './Button';\r\nimport AppBar from './AppBar';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nconst App = () => {\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n  const [queryKey, setQueryKey] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [images, setImages] = useState([]);\r\n\r\n  const handleDelete = imageId => {\r\n    const filteredImages = images.filter(({ id }) => id !== imageId);\r\n    setImages(filteredImages);\r\n  };\r\n\r\n  const handleFormSubmit = newQueryKey => {\r\n    if (newQueryKey === queryKey) {\r\n      return;\r\n    }\r\n    setQueryKey(newQueryKey);\r\n    setPage(1);\r\n    setImages([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!queryKey) {\r\n      return;\r\n    }\r\n\r\n    const renderimages = () => {\r\n      setStatus(Status.PENDING);\r\n      fetchImg(queryKey, page)\r\n        .then(images => setImages(prevState => [...prevState, ...images]))\r\n        .catch(error => {\r\n          setError(error);\r\n          setStatus(Status.REJECTED);\r\n        })\r\n        .finally(() => setStatus(Status.RESOLVED));\r\n    };\r\n    renderimages();\r\n    scroll.scrollToBottom();\r\n  }, [queryKey, page, error]);\r\n\r\n  const handleLoadMore = () => {\r\n    setPage(prevState => prevState + 1);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <AppBar onSubmit={handleFormSubmit} />\r\n      <ToastContainer position=\"top-center\" autoClose={3000} />\r\n      {status === Status.REJECTED && toast.warn('Error')}\r\n      {images.length > 0 && <Gallery images={images} onClick={handleDelete} />}\r\n      {status === Status.RESOLVED && (\r\n        <Button\r\n          onClick={handleLoadMore}\r\n          value=\"Load more\"\r\n          className=\"load-more\"\r\n          type=\"button\"\r\n        />\r\n      )}\r\n      {status === Status.PENDING && (\r\n        <Loader type=\"ThreeDots\" color=\"blue\" height={80} width={80} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  query: PropTypes.string,\r\n  page: PropTypes.number,\r\n  images: PropTypes.array,\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}